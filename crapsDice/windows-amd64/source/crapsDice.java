/* autogenerated by Processing revision 1293 on 2024-12-10 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class crapsDice extends PApplet {

Die d0, d1;
int target, score;
boolean alive;
public void setup() {
  /* size commented out by preprocessor */;
  d0 = new Die(25, height/2 - 25, 50,6);
  d1 = new Die(125, height/2 - 25, 50,6);
  textAlign(CENTER);
  textSize(30);
  restart();
}//setup
// still working

public void draw() {
  background(150,220,250);
  fill(0);
  if (target==0) {
        background(150,220,250);
    text("No target",100,30);
  }
  else if (alive==false) {
    background(255,20,15);
    text("You lost!",100,170);
  }
  else {
    background(250,220,150);
    text("Target: "+target,100,30);
    text("Score: "+score,100,170);
  }
    d0.display();
  d1.display();
}//draw


public void keyPressed() {
  if (key == ' ' && alive) {
    int roll;
    roll=d0.roll();
    roll+=d1.roll();
    updateScore(roll);
  }//roll
  if (key== 'r') {
    restart();
  }
}//if keyPressed

public void restart() {
  target=0;
  score=0;
  d0.reset();
  d1.reset();
  alive=true;
}

public void updateScore(int roll) {
  if (target==0) {
    if (roll==2) {
      alive=false;
    }
    else if (! (roll==7 || roll==11)) {
      target=roll;
    }
  }
  else {
    if (roll==7||roll==11) {
      alive=false;
    }
    else if (roll==target) {
      target=0;
    }
    else {
      score+=roll;
    }
  }
}
class Die {
  int dx, dy;
  int dsize;
  int dvalue;
  int dsides;
  Die(int x, int y, int size, int sides) {
    dx=x;
    dy=y;
    dsize=size;
    dsides=sides;
    dvalue=PApplet.parseInt(random(1, 1+dsides));
  }//constructor
  public void display() {
    fill(255);
    square(dx, dy, dsize);
    if (!(dvalue==0)) {
      fill(0);
      text(dvalue, dx+dsize/2, dy+dsize*2/3);
    }
  }//display
  public int roll() {
    dvalue=PApplet.parseInt(random(1, 1+dsides));
    return dvalue;
  }//roll
  public void reset() {
    dvalue=0;
  }
}//Die


  public void settings() { size(200, 200); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "crapsDice" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
